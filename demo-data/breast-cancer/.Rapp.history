ls()
class(factor_table)
class(species)
dim(factor_table)
class(iris_table)
source("/Users/mkrogh/amber/app/Bioinformatics/data/iris/parse.R")
ls()
sample_names
molecule_names
iris_table
ls()
species
lm(iris_table[1,] ~ species)
anova(lm(iris_table[1,] ~ species))
anova(lm(iris_table[2,] ~ species))
anova(lm(iris_table[3,] ~ species))
anova(lm(iris_table[4,] ~ species))
iris_table[1, species = "iris-setosa"]
iris_table[1, species == "iris-setosa"]
mean(iris_table[1, species == "iris-setosa"])
mean(iris_table[, species == "iris-setosa"])
mean(iris_table[2, species == "iris-setosa"])
mean(iris_table[3, species == "iris-setosa"])
mean(iris_table[4, species == "iris-setosa"])
(iris_table[4, species == "iris-setosa"])sd
sd(iris_table[4, species == "iris-setosa"])sd
std.dev(iris_table[4, species == "iris-setosa"])sd
std.dev(iris_table[4, species == "iris-setosa"])
sd(iris_table[4, species == "iris-setosa"])
subset = species != "iris-setosa"
anova(lm(iris_table[4, subset] ~ species[subset]))
subset1 = species == "iris-setosa"
subset2 = species == "iris-versicolor"
subset3 = species == "iris-virginica"
t.test(iris_table[1, subset1], iris_table[1,subset2], equal.var = T)
t.test(iris_table[2, subset1], iris_table[2,subset2], equal.var = T)
wilcox.test(iris_table[2, subset1], iris_table[2,subset2], equal.var = T)
wilcox.test(iris_table[1, subset1], iris_table[1,subset2], equal.var = T)
wilcox.test(iris_table[3, subset1], iris_table[3,subset2], equal.var = T)
?hclust
?dist
dist(iris_table)
dist(t(iris_table))
hclust(dist(t(iris_table)))
plot(hclust(dist(t(iris_table))))
plot(hclust(dist(t(iris_table[,1:10]))))
iris_table[1,1:10]
iris_table[4,1:10]
plot(hclust(dist(t(iris_table[,1:10]))))
plot(hclust(dist(t(iris_table[,2:10]))))
plot(hclust(dist(t(iris_table[,1:6]))))
?hclust
plot(hclust(dist(t(iris_table[,1:6])), method="average")
)
plot(hclust(dist(t(iris_table[,1:6])), method="average"))
plot(hclust(dist(t(iris_table[,1:6])), method="complete"))
plot(hclust(dist(t(iris_table[,1:10])), method="complete"))
plot(hclust(dist(t(iris_table[,1:10])), method="minimum"))
plot(hclust(dist(t(iris_table[,1:10])), method="single"))
plot(hclust(dist(t(iris_table[,c(1:10, 51:60)])), method="single"))
plot(hclust(dist(t(iris_table[,c(1:10, 51:60)])), method="average"))
?princomp
princomp(t(iris)_table))
princomp(t(iris_table))
plot(princomp(t(iris_table)))
biplot(princomp(t(iris_table)))
biplot(princomp(t(iris_table[,1:5])))
biplot(princomp(t(iris_table[,1:7])))
?biplot
biplot(princomp(t(iris_table[,1:7])), var.axes = F)
biplot(princomp(t(iris_table[,1:8])), var.axes = F)
biplot(princomp(t(iris_table[,c(1:5, 51:55)])), var.axes = F)
dir
dir()
cd("amber")
cwd("amber")
?dir
??cd
??cwd
??pwd
??chdir
?chdir
getwd()
setwd("amber")
getwd()
setwd("app/Amberbio/demo-data")
getwd()
setwd("breast-cancer")
getwd()
source("program.R")
ls()
value_data[1:5,]
source("program.R")
value_data[1:5,]
dim(value_data)
value_data[1:3,]
value_data[1,]
value_data[2,]
value_data[2,10:]
value_data[2,10:20]
value_data[2,12:20]
value_data[2,12:60]
value_data[2,12:59]
value_data[2:3,12:59]
source("program.R")
source("program.R")
ls()
factor_data[1:5,]
factor_data[1:10,]
factor_data[,1]
factor_data[9:10,1]
factor_data[9:19,1]
factor_data[9:18,1]
factor_data[c(9:18, 21:22, 25:26, 30:32, 41:44, 47:50, 55:58),1]
factor_data[c(9:18, 21:22, 25:26, 30:32, 41:44, 47:50, 55:58),1]
factor_data[c(9:18, 21:22, 25:26, 30:32, 41:44, 47:50, 55:56),1]
source("program.R")
ls()
factor_data_reduced
source("program.R")
factor_data_reduced
paste("sample-", 1:4)
paste("sample-", 1:4, sep ="")
length(factor_subset)
source("program.R")
ls()
factors
source("program.R")
factors
source("program.R")
factors
source("program.R")
source("program.R")
factors
factor_data_reduced
source("program.R")
factors
source("program.R")
factors
source("program.R")
factors
source("program.R")
factors
source("program.R")
factors
source("program.R")
factors
source("program.R")
factors
names(factors)
colnames(factors)
source("program.R")
factors
t(factors)
factors
source("program.R")
source("program.R")
?wirte.table
?write.table
source("program.R")
?write.table
source("program.R")
factor_data_reduced
ls()
value_data[1,]
value_data[2,]
factor_data_reduced
factor_data_reduced[,3]
factor_data_reduced[,4]
value_data[2,]
value_data[2,38]
value_data[2,40]
value_data[2,10:60]
as.character(value_data[2,10:60])
value_data[2,29]
as.character(value_data[2,])
value_data[2,38]
factor_data_reduced[,4]
value_data[2,12]
factor_data_reduced
factor_data_reduced[,4]
value_data[2,12]
as.character(value_data[2,])
value_data[2,42]
value_data[2,14]
value_data[2,32]
value_data[2,44]
value_data[2,16]
value_data[2,46]
value_data[2,18]
value_data[2,34]
value_data[2,50]
value_data[2,48]
value_data[2,20]
value_data[2,53]
value_data[2,55]
value_data[2,25]
value_data[2,37]
value_data[2,26]
value_data[2,57]
value_data[2,58]
value_data[2,29]
source("program.R")
source("program.R")
factor_data_reduced[,4]
source("program.R")
samples_in_values
as.character(value_data[2, samples_in_values])
value_data[1:5, 1:10]
value_data[1:5, 1:20]
value_data[1:5, sample_in_values]
value_data[1:5, samples_in_values]
value_data[3:5, samples_in_values]
value_data[3:5, 1:10]
value_data[1:5, 1:10]
value_data[1:5, 1:20]
dim(value_data)
source("program.R")
ls()
values[1:5,]
source("program.R")
values[1:5,]
dim(values)
source("program.R")
values[1:5,]
dim(values)
data_values[1:10,]
data_value[1:10,]
value_data[1:10,]
value_data[1:10,1:15]
value_data[1:10,1:11]
value_data[1:10,c(2,11)]
source("program.R")
source("program.R")
annotations[1:10,]
values[1:10,1:5]
source("program.R")
annotations[1:10,]
source("program.R")
source("program.R")
source("program.R")
ls()
value_data[1:5,38]
value_data[1:5,]
value_data[1:5,38:40]
ls()
factors[]
factors[,2]
source("program.R")
q()
